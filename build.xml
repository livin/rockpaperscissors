<?xml version="1.0" encoding="UTF-8"?>
<project name="rockpaperscissors" default="run">
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.apk"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.ane"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
        <include name="**/?*.sql"/>
    </patternset>

    <!-- Modules -->


    <dirname property="basedir" file="${ant.file}"/>

    <property name="output.dir" value="${basedir}/out/production"/>
    <property name="testoutput.dir" value="${basedir}/out/test"/>
    <property name="test.report.dir" value="${basedir}/out/test-report"/>

    <path id="bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="production.classpath"/>

    <path id="classpath">
        <pathelement location="${output.dir}"/>
    </path>

    <path id="tests.classpath">
        <pathelement location="lib/junit-4.11.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${output.dir}"/>
        <pathelement location="${testoutput.dir}"/>
    </path>

    <patternset id="excluded">
        <patternset refid="ignored.files"/>
    </patternset>

    <path id="sourcepath">
        <dirset dir="${basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="test.sourcepath">
        <dirset dir="${basedir}">
            <include name="src-test"/>
        </dirset>
    </path>

    <target name="compile" depends="compile.production,compile.tests" description="Compile"/>

    <target name="compile.production" description="Compile production classes">
        <mkdir dir="${output.dir}"/>
        <javac destdir="${output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args}"/>
            <classpath refid="classpath"/>
            <src refid="sourcepath"/>
            <patternset refid="excluded"/>
        </javac>

        <copy todir="${output.dir}">
            <fileset dir="${basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.tests" depends="compile.production" description="compile test classes" unless="skip.tests">
        <mkdir dir="${testoutput.dir}"/>
        <javac destdir="${testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args}"/>
            <classpath refid="tests.classpath"/>
            <src refid="test.sourcepath"/>
            <patternset refid="excluded"/>
        </javac>

        <copy todir="${testoutput.dir}">
            <fileset dir="${basedir}/src-test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean" description="cleanup module">
        <delete dir="${output.dir}"/>
        <delete dir="${testoutput.dir}"/>
    </target>

    <target name="build" depends="clean, compile" description="build all"/>

    <target name="jar" depends="build" description="Make Distribution">
        <jar destfile="rockpaperscissors.jar" basedir="${output.dir}">
            <manifest>
                <attribute name="Main-Class" value="com.vlivin.rockpaperscissors.RockPaperScissors"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="build">
        <java classpathref="classpath" classname="com.vlivin.rockpaperscissors.RockPaperScissors"/>
    </target>

    <target name="test" depends="compile.tests">
        <delete dir="${test.report.dir}"/>

        <junit haltonerror="yes" printsummary="yes" showoutput="yes" filtertrace="off">
            <formatter type="plain" usefile="false" />
            <classpath refid="tests.classpath"/>
            <batchtest todir="${test.report.dir}">
                <fileset dir="${testoutput.dir}">
                    <include name="**/*Test*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
</project>